<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CP的生活日志</title>
  <subtitle>-生活-技术-兴趣-</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://chengpeng.me/"/>
  <updated>2016-06-02T09:05:57.000Z</updated>
  <id>http://chengpeng.me/</id>
  
  <author>
    <name>Peng Cheng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>少一点套路，多一点真诚</title>
    <link href="http://chengpeng.me/2016/06/02/integrity/"/>
    <id>http://chengpeng.me/2016/06/02/integrity/</id>
    <published>2016-06-02T06:21:15.000Z</published>
    <updated>2016-06-02T09:05:57.000Z</updated>
    
    <content type="html">&lt;p&gt;最近霉运当头，记录一下权当释放情绪了…&lt;/p&gt;
&lt;h2 id=&quot;诚恒&quot;&gt;&lt;a href=&quot;#诚恒&quot; class=&quot;headerlink&quot; title=&quot;诚恒&quot;&gt;&lt;/a&gt;诚恒&lt;/h2&gt;&lt;p&gt;我的中学母校：江苏省南通中学，有个校训叫“诚恒”—-诚于做人，恒于学问。&lt;br&gt;在中国残酷的应试教育体系，特别是竞争激烈的江苏省境内，我不记得除了做考卷，学校在素质教育上有投入什么心血。&lt;br&gt;同时对我们那个年纪的人来说，传统的说教式素质教育往往会带来反效果，越是满口仁义道德，越可能引发他人杀人放火。这跟当时社会总体认识，价值观冲突有比较大关系，深层次我也不懂，就不说了。&lt;br&gt;总之这“诚恒”的校训也就靠建了棟名为“诚恒楼”的教学楼，让大家铭记于心，至少我是这样。&lt;br&gt;–“你在哪栋楼上课啊？” –“诚恒楼。”&lt;br&gt;–“小兄弟，诚恒楼在啊？” –“前面左拐右手第一栋就是。”&lt;/p&gt;
&lt;p&gt;什么是诚于做人？没有老师做过过多解释。也可能在全校大会上校长念过一段冗长的文章来诠释过我们的校训，&lt;br&gt;可因为知道这些东西考试也不加分，所以对我们来说都是些过耳云烟。&lt;/p&gt;
&lt;p&gt;而当时我们的做人原则就是丛林法则，谁牛逼谁就是正义，吃亏了别抱怨，等你强大了你也能这样对别人。&lt;/p&gt;
&lt;h2 id=&quot;修浴室门&quot;&gt;&lt;a href=&quot;#修浴室门&quot; class=&quot;headerlink&quot; title=&quot;修浴室门&quot;&gt;&lt;/a&gt;修浴室门&lt;/h2&gt;&lt;p&gt;前段时间浴室的玻璃门有些歪了，连接处的金属板也坏了。找物业说是不负责修，但给了一个曾经负责浴室这块装修的师父电话，让联系他。&lt;br&gt;联系上了以后，对方口气也不怎么好，询问了基本情况，可谁让我们有求于人，态度良好的描述了情况，再约上了上门维修的时间。维修师父也爽快，说第二天就来。我这一听挺高兴，中国效率好，中国效率高，当天电话就能约到第二天。谁知道高兴的太早。&lt;br&gt;第二天等了一天，没人敲门铃（哦，有快递的敲过）。下午4，5点我打电话过去，对方一脸懵逼（虽然我看不到），表示忘了，然后找出一个理由说是配件没到，要等。反问什么时候能到，答曰明日。”好嘞“。我就是年轻。&lt;br&gt;没错，第三天等了一天，还是没人来，快到晚上我打电话过去，对方说因为下雨，配件没送来，呵呵，你丫倒是打个电话告诉我啊。我觉得这样不行，我约时间他总是明天，但是明天复明天，木兰要懵逼，他总是不来啊，我就跟他商量说什么时候配件到了，来的时候给我电话。”好嘞“，我就是年轻。。。&lt;/p&gt;
&lt;p&gt;一等就是4天，显然你的好友张师父已经下线且删除好友。。。&lt;br&gt;再次致电，对方依旧一脸懵逼，仿佛之前什么事情都没发生过，但是极其爽快的答应了第二天下午前来修理。&lt;br&gt;下午3点半没见人来，打电话过去，对方表示忘记了，且今天是来不了了，表示了一丝抱歉。至于什么时候能来，&lt;br&gt;这次说晚上电话联系。好吧，我也无所谓了。 to be continued….&lt;/p&gt;
&lt;h2 id=&quot;求职&quot;&gt;&lt;a href=&quot;#求职&quot; class=&quot;headerlink&quot; title=&quot;求职&quot;&gt;&lt;/a&gt;求职&lt;/h2&gt;&lt;p&gt;5月初开始面试求职，投的前端职。&lt;br&gt;虽然之前没有什么前端经验，但是我有热情啊，我有热情啊，我有热情啊。海投之后，有几家感受到了我的热情，约了面试。&lt;br&gt;有一家创业公司（下简称A公司），已进入B轮，且在上海已有不小规模。先来了通电话面试，聊了半个多小时，把自己能忽悠的都忽悠了，估计对方也感受到了我的热情，让我完成一个前端作业然后等后续通知。&lt;br&gt;花开两朵，各表一枝。第二天收到另一家大型国企（下简称B公司）的面试通知，2点到的公司，啪啪啪先来三个人集体面我，面的我脸红心跳，又是说又是写的。面了快2个小时，三人出去让我稍等，以为过了技术，要来面人事了。谁知不一会儿又跑来一人，进来又问技术，我只能把之前说过的东西再说一遍，之后知道是交叉面试，这人是另一个组的前端组长。继续扯了半个多小时，扯完出门让我等着。又过十来分钟，进来一大叔，这一看就不是做技术的了，果然是个人事，刚想聊些什么，对方告诉我通过面试了，这防不胜防，幸福来的太突然。。这公司也是挺效率的，一次决定生死。&lt;br&gt;等出门离开的时候已经快6点了，面了4个小时对方也是够&lt;del&gt;闲&lt;/del&gt;认真的。回家的路上，接到A公司的二面通知，要求第二天下午去现场面。&lt;br&gt;于是，第二天穿戴好人模狗样的去到A公司驻地（离家2公里远），面我的是HRM和Tech Leader，倒也面善，但是相比B公司的详细技术面，这里就是经历面了，当然也是因为技术已经在电话面试里聊过了，Tech Leader也不是专职前端，所以从高中一直到现在聊了个遍，同样也花费了3，4个小时，但是至少没有B公司面的那么累，讲经历嘛，扯淡忽悠什么，让对方感受到我的热情就行了。”做完作业等通知“，得到这个结果后结束了A公司的二面。&lt;br&gt;晚上接到B公司的电话要求答复offer的接受情况，考虑到对A公司的印象不错，心里还是打算等A公司结果出来以后有个选择，可是B公司要求迅速给予答复，百般墨迹下，将dedaline定在了下周二下午（当天是周五，其实也有1.5个工作日）。&lt;br&gt;周末抓紧时间将A公司的作业完成后提交给面试官，并将B公司的情况也一并告知，希望能体谅我的情况，在周二前给个结果。&lt;br&gt;对方倒也算通人情，周二的上午就接到了A公司offer的电话，相较于B公司。两家公司的薪资待遇差不多，但是A公司的福利，假期稍好一些，况且最主要的就是距离家比较近，20分钟内的通勤时间不再是梦想。这么一考虑之后，答应了A公司的offer，委婉的拒绝了B公司。&lt;/p&gt;
&lt;p&gt;A公司的HR小妹简单的告知了一下我的福利后，说第二天会有HRM联系我给予正式offer，被胜利冲昏头脑的我欢笑着答应后挂了电话。&lt;br&gt;一天过去了，两天过去了，A公司感觉突然消失了，没有任何消息。我主动打给HR小妹，说是她领导出去开会了，等回来了就给我电话，并且表示offer是肯定会有的。听到保留offer我也就放心了，等几天就几天嘛，反正就当时休息了。&lt;br&gt;过了一个周末，依旧杳无音信，再次致电，这回HR小妹告诉我说是发了邮件给大Boss告知招聘的事情，等大Boss回信了就ok了，再次确认offer是会保留的，至于等待时间，未知。。 听到这我就感觉不靠谱了，什么邮件要等那么久，而且那么多天邮件不回，难道不会打电话确认吗？但念在反复确认过offer保留的前提下，我就继续等吧。&lt;br&gt;一等又是一周（我真是够尊重他们的了）。没有任何电话打来，只能我继续打过去，这次我要求与HRM通话。过了几个小时，HRM打过来了，我问了下offer的情况，她解释说公司这段时间在调整组织架构，我这个职位可能没有了，让我准备其他公司的面试吧。wtf!心中一万头草泥马飞奔而出，说好的保留offer呢？说好的收到回信就ok的呢？说话还有没有诚信了？压抑怒火询问是否还有转机，对方回复说组织架构的调整还没结束，有可能会调出个前端，至于什么时候调出来，估计下周吧。&lt;br&gt;打电话的时候是周一，我就暂且当她说的还是话，等到了周五，再次打过去询问得到类似答案之后，我知道肯定没戏了，他们为了自身脸面，就是不给你判死刑，给你个死缓，没说这个职位没了哦，我们在调整，说不定会调出来，至于多久能调出来，那就不知道了，1周也可能，1个月也可能，1年也有可能。&lt;/p&gt;
&lt;p&gt;对A公司死心后，我只能厚着脸皮去找B公司。因为我感觉我能投的公司我都已经投了，拒的拒，面的面，也剩不下什么公司让我继续投了，只能拼死一搏了。&lt;br&gt;邮件联系了B公司HR之后，得到回复说已转达相关同事，请等待联系。&lt;br&gt;收到这种没有时间约定的等待我也是等怕了，但这次自己理亏只得干等，在第二天下午还未收到任何回复的情况下，再次邮件对方希望知道一个拒绝或者同意的结果。2，3小时之后收到答复，解释说同事都很忙，需要2~3个工作日才能有结果，请我继续等待，但是会给我答复。&lt;br&gt;今天是第2个工作日， to be continued….&lt;/p&gt;
&lt;h2 id=&quot;诚信&quot;&gt;&lt;a href=&quot;#诚信&quot; class=&quot;headerlink&quot; title=&quot;诚信&quot;&gt;&lt;/a&gt;诚信&lt;/h2&gt;&lt;p&gt;什么是诚信？ wiki上是这么说的&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;诚信是人的核心价值，承诺思想行动一致；“诚”是诚实，“信”是有责任心、信用。相反的，无诚信者是伪君子或真小人。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我也不是什么君子，我也骗人，说谎，但是要考虑场合，考虑后果，考虑影响。&lt;br&gt;修理师傅随口的一句”明天“，让我一整天，一个周末都耗在家里等他而不能出门。但是对他来说，只会是一丝的抱歉。他的承诺对他自己而言轻如鸿毛。&lt;br&gt;A公司的承诺让我赔了夫人又折兵，B公司的offer，整整三周的时间都付诸一炬，更别提其他公司的面试机会。我并不认为自己很强，如果我不符合他们公司要求，拒绝我即可，但是这种欺骗的形式让我非常反感。&lt;br&gt;同样的B公司，纵然我曾经拒绝过他们，不过如果有了结果，我还是希望他们能够给我个结果，而不是像A公司一样给个死缓，让你永远的等下去，仿佛你等着等着就忘记了这件事一样。&lt;/p&gt;
&lt;p&gt;早年在日本留过学，日本人是极其讲究诚信的民族，大到公司合作，小到约时间见面。对日本人来说，约了几点就是几点，超过10分钟以上就算是迟到，如果是接待客人而迟到的话更是会给人带来极坏的印象。日本人和中国人做生意，经常会因为诚信的问题而闹矛盾，说到不做到的事情在中国人看来是在普通不过的事情了，因为别人对自己干过，自己也对别人干过。吃亏了下次就放聪明点，你迟到半小时，那我就晚1小时来嘛。&lt;/p&gt;
&lt;p&gt;前几天出了个日本节目黑中国人的新闻，虽然大部分都是特例，很多东西绝大部分中国人自己看了都觉得不好。但是沉下心去看，反而能看出不少中国人骨子里的东西，认识自己是提升自己不可缺少的条件。&lt;br&gt;&lt;iframe src=&quot;http://cdn.aixifan.com/player/ACFlashPlayer.out.swf?vid=3623749&quot; width=&quot;608&quot; height=&quot;380&quot; frameborder=&quot;0&quot; allowfullscreen&gt;&lt;/iframe&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近霉运当头，记录一下权当释放情绪了…&lt;/p&gt;
&lt;h2 id=&quot;诚恒&quot;&gt;&lt;a href=&quot;#诚恒&quot; class=&quot;headerlink&quot; title=&quot;诚恒&quot;&gt;&lt;/a&gt;诚恒&lt;/h2&gt;&lt;p&gt;我的中学母校：江苏省南通中学，有个校训叫“诚恒”—-诚于做人，恒于学问。&lt;br&gt;在中国
    
    </summary>
    
    
      <category term="生活" scheme="http://chengpeng.me/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>WiiU 5.5/5.5.1 破解</title>
    <link href="http://chengpeng.me/2016/05/13/wiiuhack/"/>
    <id>http://chengpeng.me/2016/05/13/wiiuhack/</id>
    <published>2016-05-13T03:19:03.000Z</published>
    <updated>2016-05-13T06:16:47.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;题外话&quot;&gt;&lt;a href=&quot;#题外话&quot; class=&quot;headerlink&quot; title=&quot;题外话&quot;&gt;&lt;/a&gt;题外话&lt;/h2&gt;&lt;p&gt;自从node升了v6, hexo就沦陷了，到现在还没能支持。实在等不了了，只能node降级了。&lt;br&gt;当然也可以用&lt;a href=&quot;https://github.com/creationix/nvm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nvm&lt;/a&gt;安装多个node版本，不过因为以前用RVM做ruby版本控制有点阴影，所以就罢了，反正一个版本也够用了。&lt;/p&gt;
&lt;h2 id=&quot;WiiU破解&quot;&gt;&lt;a href=&quot;#WiiU破解&quot; class=&quot;headerlink&quot; title=&quot;WiiU破解&quot;&gt;&lt;/a&gt;WiiU破解&lt;/h2&gt;&lt;p&gt;本破解教程参考自&lt;a href=&quot;https://www.reddit.com/r/WiiUHacks/comments/4i4rv7/flimflam69s_551_kernel_exploit_guide_and_other/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;FlimFlam69’s 5.5.1 Kernel Exploit Guide (And other various things)&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;确认WiiU版本&quot;&gt;&lt;a href=&quot;#确认WiiU版本&quot; class=&quot;headerlink&quot; title=&quot;确认WiiU版本&quot;&gt;&lt;/a&gt;确认WiiU版本&lt;/h3&gt;&lt;p&gt;之前可以破解的最新版本是5.3.2， 现在可以将WiiU先升级到5.5.1版本。&lt;br&gt;如果看文章时最新版本已经超过5.5.1，请先确认是否支持破解再升级。&lt;/p&gt;
&lt;h2 id=&quot;屏蔽自动升级&quot;&gt;&lt;a href=&quot;#屏蔽自动升级&quot; class=&quot;headerlink&quot; title=&quot;屏蔽自动升级&quot;&gt;&lt;/a&gt;屏蔽自动升级&lt;/h2&gt;&lt;p&gt;为了防止任天堂升级内核补漏洞，需要将WiiU的自动升级屏蔽，有以下两个方式&lt;/p&gt;
&lt;h3 id=&quot;1-修改DNS&quot;&gt;&lt;a href=&quot;#1-修改DNS&quot; class=&quot;headerlink&quot; title=&quot;1.修改DNS&quot;&gt;&lt;/a&gt;1.修改DNS&lt;/h3&gt;&lt;p&gt;在WiiU的Internet设置中修改DNS相关设置&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Turn Auto-Obtain DNS &lt;strong&gt;OFF&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Set Primary DNS to &lt;strong&gt;107.211.140.065&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Set Secondary DNS to &lt;strong&gt;107.211.140.065&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;修改完DNS以后，WiiU无法解析服务器地址，就无法自动升级了，但是也登陆不了eShop了，原贴中有相关解决方案。同时也看不了Youtube，这对墙内的同学来说也没什么区别。&lt;/p&gt;
&lt;h3 id=&quot;2-屏蔽URL&quot;&gt;&lt;a href=&quot;#2-屏蔽URL&quot; class=&quot;headerlink&quot; title=&quot;2.屏蔽URL&quot;&gt;&lt;/a&gt;2.屏蔽URL&lt;/h3&gt;&lt;p&gt;类似修改hosts文件，在路由器中将如下地址给屏蔽掉&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;nus.cdn.c.shop.nintendowifi.net&lt;/li&gt;
&lt;li&gt;nus.cdn.shop.wii.com&lt;/li&gt;
&lt;li&gt;nus.cdn.wup.shop.nintendo.net&lt;/li&gt;
&lt;li&gt;nus.wup.shop.nintendo.net&lt;/li&gt;
&lt;li&gt;nus.c.shop.nintendowifi.net&lt;/li&gt;
&lt;li&gt;c.shop.nintendowifi.net&lt;/li&gt;
&lt;li&gt;cbvc.cdn.nintendo.net&lt;/li&gt;
&lt;li&gt;cbvc.nintendo.net&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因为是在路由器中屏蔽的，如果同时有3DS或者其他任天堂机器连在同一个wifi中，也一样登陆不了相关商店。&lt;/p&gt;
&lt;h3 id=&quot;关闭自动升级&quot;&gt;&lt;a href=&quot;#关闭自动升级&quot; class=&quot;headerlink&quot; title=&quot;关闭自动升级&quot;&gt;&lt;/a&gt;关闭自动升级&lt;/h3&gt;&lt;p&gt;注意在View Mac Address下面还有一个&lt;strong&gt;Automatic Software Downloads&lt;/strong&gt;的选项注意设置为Disable。&lt;/p&gt;
&lt;h2 id=&quot;配置SD卡&quot;&gt;&lt;a href=&quot;#配置SD卡&quot; class=&quot;headerlink&quot; title=&quot;配置SD卡&quot;&gt;&lt;/a&gt;配置SD卡&lt;/h2&gt;&lt;p&gt;现在破解只支持SD卡，还不支持外置硬盘，所以需要购置一块SD卡。&lt;br&gt;据说支持128G SDXC，我觉得没必要，用的是64G SDXC TF卡（插卡套），确认可支持。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;格式化SD卡为FAT32。（Mac下做格式化会有问题，我是通过vmware虚拟windows做的）&lt;/li&gt;
&lt;li&gt;下载最新 &lt;a href=&quot;https://github.com/dimok789/homebrew_launcher/releases&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Homebrew Launcher&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;下载最新 &lt;a href=&quot;https://github.com/dimok789/loadiine_gx2/releases&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Loadiine GX2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;解压上面下载的2个文件，将文件对应以下路径拷贝到SD卡中&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;SD:/wiiu/apps/homebrew_launcher/homebrew_launcher.elf&lt;/li&gt;
&lt;li&gt;SD:/wiiu/apps/homebrew_launcher/icon.png&lt;/li&gt;
&lt;li&gt;SD:/wiiu/apps/homebrew_launcher/meta.xml&lt;/li&gt;
&lt;li&gt;SD:/wiiu/apps/loadiine_gx2/loadiine_gx2.elf&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下载的游戏放在如下路径&lt;br&gt;&lt;strong&gt;SD:/wiiu/games/Example Game [GAMEID]&lt;/strong&gt;&lt;br&gt;如果下载的游戏没有GAMEID，可以去&lt;a href=&quot;http://www.gametdb.com/WiiU&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GameTDB&lt;/a&gt;查询。&lt;br&gt;游戏资源自己网上搜吧。&lt;/p&gt;
&lt;h2 id=&quot;启动Kernel-Exploit&quot;&gt;&lt;a href=&quot;#启动Kernel-Exploit&quot; class=&quot;headerlink&quot; title=&quot;启动Kernel Exploit&quot;&gt;&lt;/a&gt;启动Kernel Exploit&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;将SD卡插入WiiU卡槽&lt;/li&gt;
&lt;li&gt;打开WiiU,打开内置浏览器&lt;/li&gt;
&lt;li&gt;删除Cookies(Delete Cookies)&lt;/li&gt;
&lt;li&gt;打开地址&lt;a href=&quot;http://loadiine.ovh/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://loadiine.ovh/&lt;/a&gt; （建议加入收藏夹）&lt;/li&gt;
&lt;li&gt;国内打开可能有点慢，页面加载完毕后点击下拉菜单右边的绿色按钮。&lt;/li&gt;
&lt;li&gt;如果之前的配置都没有问题，等待片刻（也可能比较久），就会进入Homebrew.(如果白屏不动了请重启WiiU再次操作)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;配置启动服务器&quot;&gt;&lt;a href=&quot;#配置启动服务器&quot; class=&quot;headerlink&quot; title=&quot;配置启动服务器&quot;&gt;&lt;/a&gt;配置启动服务器&lt;/h2&gt;&lt;p&gt;以后每次我们想玩的时候，必须打开&lt;a href=&quot;http://loadiine.ovh/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://loadiine.ovh/&lt;/a&gt;，但是因为网络条件，可能耗费的时间比较多，这时候我们可以自己搭设服务器来启动Homebrew.&lt;/p&gt;
&lt;p&gt;网上有用XAMPP在Windows下架服务器的&lt;a href=&quot;http://gbatemp.net/threads/5-5-1-5-4-0-5-3-2-self-hosting-package-everything-in-one-zip-file.424679/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;教程&lt;/a&gt;，有兴趣的可以去尝试。&lt;/p&gt;
&lt;p&gt;Mac的话也差不多，有空研究一下更新文章。&lt;/p&gt;
&lt;h2 id=&quot;最后&quot;&gt;&lt;a href=&quot;#最后&quot; class=&quot;headerlink&quot; title=&quot;最后&quot;&gt;&lt;/a&gt;最后&lt;/h2&gt;&lt;p&gt;5.5/5.5.1版本的破解其实去年底就有消息了，拖到3月份发布者消息后也就不了了之了。&lt;br&gt;之后上个月任天堂发布NX的发售日程，WiiU的停产消息。&lt;br&gt;现在WiiU失守，另一(yin)方(mou)面(lun)也可以看做帮了任天堂，将WiiU变废为宝。相信接下来一段时间WiiU的销售会有一阵小高潮。&lt;br&gt;不过Loadiine目前还不支持online play，所以也无法体验到好多以在线为主的游戏。&lt;br&gt;最后还是希望大家支持正版，哈哈。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题外话&quot;&gt;&lt;a href=&quot;#题外话&quot; class=&quot;headerlink&quot; title=&quot;题外话&quot;&gt;&lt;/a&gt;题外话&lt;/h2&gt;&lt;p&gt;自从node升了v6, hexo就沦陷了，到现在还没能支持。实在等不了了，只能node降级了。&lt;br&gt;当然也可以用&lt;a href=&quot;https://github.com/creationix/nvm&quot;&gt;nvm&lt;/a&gt;安装多个node版本，不过因为以前用RVM做ruby版本控制有点阴影，所以就罢了，反正一个版本也够用了。&lt;/p&gt;
&lt;h2 id=&quot;WiiU破解&quot;&gt;&lt;a href=&quot;#WiiU破解&quot; class=&quot;headerlink&quot; title=&quot;WiiU破解&quot;&gt;&lt;/a&gt;WiiU破解&lt;/h2&gt;&lt;p&gt;本破解教程参考自&lt;a href=&quot;https://www.reddit.com/r/WiiUHacks/comments/4i4rv7/flimflam69s_551_kernel_exploit_guide_and_other/&quot;&gt;FlimFlam69’s 5.5.1 Kernel Exploit Guide (And other various things)&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>浅谈使用Json Web Token和Cookie的利弊</title>
    <link href="http://chengpeng.me/2016/04/15/jwtvscookie/"/>
    <id>http://chengpeng.me/2016/04/15/jwtvscookie/</id>
    <published>2016-04-15T07:32:48.000Z</published>
    <updated>2016-04-15T08:37:00.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Authentication&quot;&gt;&lt;a href=&quot;#Authentication&quot; class=&quot;headerlink&quot; title=&quot;Authentication&quot;&gt;&lt;/a&gt;Authentication&lt;/h2&gt;&lt;p&gt;现在基本上有两种不同的方式来处理服务器端的认证（Authentication）问题。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Cookie-Based Authentication:最常用的是利用cookie来存储认证信息，并包含在发送请求中用于服务器端的核查&lt;/li&gt;
&lt;li&gt;Token-Based Authentication:本文主要介绍的Token为基础的认证方式。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Json-Web-Token-JWT&quot;&gt;&lt;a href=&quot;#Json-Web-Token-JWT&quot; class=&quot;headerlink&quot; title=&quot;Json Web Token(JWT)&quot;&gt;&lt;/a&gt;Json Web Token(JWT)&lt;/h2&gt;&lt;p&gt;JWT是一个以JSON为基准的标准规范，通过JSON来传递消息，具体定义可以参见&lt;a href=&quot;http://self-issued.info/docs/draft-ietf-oauth-json-web-token.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;br&gt;JWT自身会携带所有的信息，包括payload和signature。&lt;br&gt;JWT常常通过HTTP的header来传送信息，同时也可以通过URL来传送。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;JWT的构成&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;header.payload.signature&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Header&quot;&gt;&lt;a href=&quot;#Header&quot; class=&quot;headerlink&quot; title=&quot;Header&quot;&gt;&lt;/a&gt;Header&lt;/h3&gt;&lt;p&gt;Header包含2部分。&lt;br&gt;typ定义类型为JWT，alg定义加密类型为HS256&lt;br&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;typ&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;JWT&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;alg&quot;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;HS256&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;通过&lt;a href=&quot;https://zh.wikipedia.org/wiki/Base64&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Base64&lt;/a&gt;的转化得到第一部分&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Payload&quot;&gt;&lt;a href=&quot;#Payload&quot; class=&quot;headerlink&quot; title=&quot;Payload&quot;&gt;&lt;/a&gt;Payload&lt;/h3&gt;&lt;p&gt;这部分由我们需要发送的数据内容构成&lt;br&gt;&lt;figure class=&quot;highlight json&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;iss&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;chengpeng.me&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;exp&quot;&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;144444444&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;user&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;CP&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attr&quot;&gt;&quot;email&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;chengandpeng@gmail.com&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;br&gt;&lt;strong&gt;iss&lt;/strong&gt;: token的发行者&lt;br&gt;&lt;strong&gt;exp&lt;/strong&gt;: 过期时间，必须在现在时间之后&lt;br&gt;其他一些声明&lt;br&gt;&lt;strong&gt;sub&lt;/strong&gt;: token的主题&lt;br&gt;&lt;strong&gt;aud&lt;/strong&gt;: token的接受者&lt;br&gt;&lt;strong&gt;nfb&lt;/strong&gt;: 定义不可接受数据的时间&lt;br&gt;&lt;strong&gt;iat&lt;/strong&gt;: JWT的声明时间&lt;/p&gt;
&lt;p&gt;转换成Base64后得到第二部分&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;eyJpc3MiOiAiY2hlbmdwZW5nLm1lIiwiZXhwIjogMTQ0NDQ0NDQ0LCJ1c2VyIjogIkNQIiwiZW1haWwiOiJjaGVuZ2FuZHBlbmdAZ21haWwuY29tIn0=&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;Singnature&quot;&gt;&lt;a href=&quot;#Singnature&quot; class=&quot;headerlink&quot; title=&quot;Singnature&quot;&gt;&lt;/a&gt;Singnature&lt;/h3&gt;&lt;p&gt;第三部分的签名由上面我们得到的header和payload的base64的字符串，通过&lt;strong&gt;.&lt;/strong&gt;连接起来，然后使用HS256算法进行加密得到。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; encodedString = base64UrlEncode(header) + &lt;span class=&quot;string&quot;&gt;&quot;.&quot;&lt;/span&gt; + base64UrlEncode(payload);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;HMACSHA256(encodedString, &lt;span class=&quot;string&quot;&gt;&#39;secret&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;加密时必须定义一个加密字符串（本例中为’secret’），由服务端自行定义，计算后得到的结果是&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;183e996cf3ba65be2d31e6ea3d53d70942ded7a9b89bfdd7e47e38a554c3ff25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;把这部分内容和前2个结果通过&lt;strong&gt;.&lt;/strong&gt;符号接连起来就是我们的JWT了&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiAiY2hlbmdwZW5nLm1lIiwiZXhwIjogMTQ0NDQ0NDQ0LCJ1c2VyIjogIkNQIiwiZW1haWwiOiJjaGVuZ2FuZHBlbmdAZ21haWwuY29tIn0=.183e996cf3ba65be2d31e6ea3d53d70942ded7a9b89bfdd7e47e38a554c3ff25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;JWT-vs-Cookie&quot;&gt;&lt;a href=&quot;#JWT-vs-Cookie&quot; class=&quot;headerlink&quot; title=&quot;JWT vs Cookie&quot;&gt;&lt;/a&gt;JWT vs Cookie&lt;/h2&gt;&lt;p&gt;相比传统的Cookie，使用JWT有些什么好处呢?&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;跨域：JWT允许向任何服务器或者域名使用ajax，因为JWT是包含在http header中传送数据的&lt;/li&gt;
&lt;li&gt;减轻服务端负担：比起使用session来保存cookie，JWT自身包含了所有信息，通过解密即可验证&lt;/li&gt;
&lt;li&gt;安全性：因为无需使用cookie，就不必担心劫持cookie的CSRF攻击了&lt;/li&gt;
&lt;li&gt;移动端：对于无法使用cookie的一些移动端，JWT能够正常使用&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Authentication&quot;&gt;&lt;a href=&quot;#Authentication&quot; class=&quot;headerlink&quot; title=&quot;Authentication&quot;&gt;&lt;/a&gt;Authentication&lt;/h2&gt;&lt;p&gt;现在基本上有两种不同的方式来处理服务器端的认证（Authentication）问题。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Cookie-Based Authentication:最常用的是利用cookie来存储认证信息，并包含在发送请求中用于服务器端的核查&lt;/li&gt;
&lt;li&gt;Token-Based Authentication:本文主要介绍的Token为基础的认证方式。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;Json-Web-Token-JWT&quot;&gt;&lt;a href=&quot;#Json-Web-Token-JWT&quot; class=&quot;headerlink&quot; title=&quot;Json Web Token(JWT)&quot;&gt;&lt;/a&gt;Json Web Token(JWT)&lt;/h2&gt;&lt;p&gt;JWT是一个以JSON为基准的标准规范，通过JSON来传递消息，具体定义可以参见&lt;a href=&quot;http://self-issued.info/docs/draft-ietf-oauth-json-web-token.html&quot;&gt;这里&lt;/a&gt;&lt;br&gt;JWT自身会携带所有的信息，包括payload和signature。&lt;br&gt;JWT常常通过HTTP的header来传送信息，同时也可以通过URL来传送。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>用Mocha + chai做React + Redux的单元测试</title>
    <link href="http://chengpeng.me/2016/04/12/reactUnitTest/"/>
    <id>http://chengpeng.me/2016/04/12/reactUnitTest/</id>
    <published>2016-04-12T10:47:32.000Z</published>
    <updated>2016-04-16T10:58:06.000Z</updated>
    
    <content type="html">&lt;p&gt;当面对现在流行的React+Redux创建的Web应用时，该如何用Mocha+Chai进行测试？&lt;/p&gt;
&lt;h2 id=&quot;搭建测试基础框架&quot;&gt;&lt;a href=&quot;#搭建测试基础框架&quot; class=&quot;headerlink&quot; title=&quot;搭建测试基础框架&quot;&gt;&lt;/a&gt;搭建测试基础框架&lt;/h2&gt;&lt;p&gt;为了搭建搭建框架，我们需要做以下几个事：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设置一个类浏览器的命令行测试环境&lt;/li&gt;
&lt;li&gt;创建一个‘renderComponent’函数来render react class&lt;/li&gt;
&lt;li&gt;模拟事件simulating events&lt;/li&gt;
&lt;li&gt;设置chai-jquery&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面详细解释这几个事情&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;搭建一个类浏览器的命令行测试环境&quot;&gt;&lt;a href=&quot;#搭建一个类浏览器的命令行测试环境&quot; class=&quot;headerlink&quot; title=&quot;搭建一个类浏览器的命令行测试环境&quot;&gt;&lt;/a&gt;搭建一个类浏览器的命令行测试环境&lt;/h3&gt;&lt;p&gt;使用自动化工具(Webpack,browserify)构建出来的web应用，几乎所有的内容都浓缩在bundle.js里了。&lt;br&gt;不同于浏览器，terminal环境要解析Ract中的DOM，以及一些全局变量就需要工具了，&lt;/p&gt;
&lt;p&gt;这里我们采用&lt;a href=&quot;https://github.com/tmpvar/jsdom&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jsdom&lt;/a&gt;来模拟DOM结构。&lt;br&gt;再将这个DOM结构封装成jquery对象。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; jsdom &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;jsdom&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; jquery &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;jquery&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;global.document = jsdom.jsdom(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;!doctype html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;global.window = global.document.defaultView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; $ = jquery(global.window);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;创建一个‘renderComponent’函数来render-react-class&quot;&gt;&lt;a href=&quot;#创建一个‘renderComponent’函数来render-react-class&quot; class=&quot;headerlink&quot; title=&quot;创建一个‘renderComponent’函数来render react class&quot;&gt;&lt;/a&gt;创建一个‘renderComponent’函数来render react class&lt;/h3&gt;&lt;p&gt;写React应用时最常用的方法render就是将React的组件渲染成DOM（或者虚拟DOM），所以在测试之前，我们创建一个renderComponent方法，将React的组件渲染出来。&lt;/p&gt;
&lt;p&gt;用ReactTestUtils的&lt;strong&gt;renderIntoDocument&lt;/strong&gt;方法，将一个组件渲染成DOM node。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ReactComponent renderIntoDocument(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ReactElement instance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当我们使用Redux的时候，需要用Provider来渲染组件，参数分别为组件的props和Redux的state（store），因为Redux只有一个store，所以使用起来还是比较方便的。&lt;br&gt;生成的组件instance用findDOMNode方法获取真实DOM节点，并绑定成jquery对象。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; TestUtils &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;react-addons-test-utils&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; ReactDOM &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;react-dom&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;react&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; Provider &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;react-redux&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; createStore &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;redux&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; reducers &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;../src/reducers&#39;&lt;/span&gt;;  &lt;span class=&quot;comment&quot;&gt;//这里路径定义到自己的reducer文件夹&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;renderComponent&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;ComponentClass, props, state&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// React Add-Ons : renderIntoDocument &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; componentInstance = TestUtils.renderIntoDocument(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;Provider store=&amp;#123;createStore(reducers, state)&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;ComponentClass &amp;#123;...props&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/Provider&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return $(ReactDOM.findDOMNode(componentInstance)); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样，通过renderComponent方法，就可以将一个react组件转换成dom节点并返回。&lt;/p&gt;
&lt;h3 id=&quot;模拟事件simulating-events&quot;&gt;&lt;a href=&quot;#模拟事件simulating-events&quot; class=&quot;headerlink&quot; title=&quot;模拟事件simulating events&quot;&gt;&lt;/a&gt;模拟事件simulating events&lt;/h3&gt;&lt;p&gt;有时候，我们需要模拟一些事件来满足我们的测试需求，例如点击button，按下键盘，输入文字等。&lt;br&gt;这部分我们用ReactTestUtils的&lt;a href=&quot;https://facebook.github.io/react/docs/test-utils.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;simulate&lt;/a&gt;方法来实现。&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$.fn.simulate = &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;eventName, value&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.val(value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  TestUtils.Simulate[eventName](&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;设置chai-jquery&quot;&gt;&lt;a href=&quot;#设置chai-jquery&quot; class=&quot;headerlink&quot; title=&quot;设置chai-jquery&quot;&gt;&lt;/a&gt;设置chai-jquery&lt;/h3&gt;&lt;p&gt;设置一下&lt;a href=&quot;https://github.com/chaijs/chai-jquery&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;chai-jquery&lt;/a&gt;,具体参看官方网页。&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; chai, &amp;#123; expect &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;chai&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; chaiJquery &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;chai-jquery&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chaiJquery(chai, chai.util, $);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;export方法&quot;&gt;&lt;a href=&quot;#export方法&quot; class=&quot;headerlink&quot; title=&quot;export方法&quot;&gt;&lt;/a&gt;export方法&lt;/h3&gt;&lt;p&gt;最后不要忘了把renderComponent和chai的expect export出去&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &amp;#123; renderComponent, expect &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;test-helper-js&quot;&gt;&lt;a href=&quot;#test-helper-js&quot; class=&quot;headerlink&quot; title=&quot;test_helper.js&quot;&gt;&lt;/a&gt;test_helper.js&lt;/h3&gt;&lt;p&gt;以上内容可以合成到一个js文件中&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; jsdom &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;jsdom&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; jquery &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;jquery&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; TestUtils &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;react-addons-test-utils&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; ReactDOM &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;react-dom&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; chai, &amp;#123; expect &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;chai&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;react&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; Provider &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;react-redux&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; createStore &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;redux&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; reducers &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;../src/reducers&#39;&lt;/span&gt;; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; chaiJquery &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;chai-jquery&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 设置一个类浏览器的命令行测试环境&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;global.document = jsdom.jsdom(&lt;span class=&quot;string&quot;&gt;&#39;&amp;lt;!doctype html&amp;gt;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;global.window = global.document.defaultView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; $ = jquery(global.window);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 创建一个‘renderComponent’函数来render react class&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;renderComponent&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;ComponentClass, props, state&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// React Add-Ons : renderIntoDocument &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; componentInstance = TestUtils.renderIntoDocument(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;Provider store=&amp;#123;createStore(reducers, state)&amp;#125;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;lt;ComponentClass &amp;#123;...props&amp;#125; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;/Provider&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  return $(ReactDOM.findDOMNode(componentInstance)); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 模拟事件simulating events&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$.fn.simulate = function(eventName, value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  if (value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    this.val(value);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  TestUtils.Simulate[eventName](this[0]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// set up chai-jquery&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chaiJquery(chai, chai.util, $);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;export &amp;#123; renderComponent, expect &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;如何使用test-helper-js&quot;&gt;&lt;a href=&quot;#如何使用test-helper-js&quot; class=&quot;headerlink&quot; title=&quot;如何使用test_helper.js&quot;&gt;&lt;/a&gt;如何使用test_helper.js&lt;/h2&gt;&lt;p&gt;说了半天只不过写了一个测试工具框架而已，下面说说怎么使用这个工具。&lt;/p&gt;
&lt;p&gt;假设我们有一个评论APP，有一个评论框，下面是评论列表&lt;br&gt;&lt;strong&gt;APP&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; React &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;react&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; Component &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;react&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; CommentBox &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./comment_box&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; CommentList &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;./comment_list&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;App&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Component&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  render() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;CommentBox /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;lt;CommentList /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;测试案例&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有一个comment box （这里检查是否包含comment-box class）&lt;/li&gt;
&lt;li&gt;有一个comment list （这里检查是否包含comment-list class)&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; renderComponent, expect &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;../test_helper&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; App &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;../../src/components/app&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 使用describe把相似的测试结合起来&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;describe(&lt;span class=&quot;string&quot;&gt;&#39;App&#39;&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; component;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    beforeEach(() =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        component = renderComponent(App);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 使用it测试一个目标的一个行为&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    it(&lt;span class=&quot;string&quot;&gt;&#39;shows a comment box&#39;&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 使用expect断言一个目标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        expect(component.find(&lt;span class=&quot;string&quot;&gt;&#39;.comment-box&#39;&lt;/span&gt;)).to.exist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    it(&lt;span class=&quot;string&quot;&gt;&#39;shows a comment list&#39;&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        expect(component.find(&lt;span class=&quot;string&quot;&gt;&#39;.comment-list&#39;&lt;/span&gt;)).to.exist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;再做一个CommentBox的测试案例：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;有一个textarea&lt;/li&gt;
&lt;li&gt;有一个button&lt;/li&gt;
&lt;li&gt;在textarea中显示输入的文字&lt;/li&gt;
&lt;li&gt;当提交后清空textarea&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; &amp;#123; renderComponent, expect &amp;#125; &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;../test_helper&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; CommentBox &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;../../src/components/comment_box&#39;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;describe(&lt;span class=&quot;string&quot;&gt;&#39;CommentBox&#39;&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; component;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    beforeEach(() =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        component = renderComponent(CommentBox);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;); &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    it(&lt;span class=&quot;string&quot;&gt;&#39;has a text area&#39;&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        expect(component.find(&lt;span class=&quot;string&quot;&gt;&#39;textarea&#39;&lt;/span&gt;)).to.exist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    it(&lt;span class=&quot;string&quot;&gt;&#39;has a button&#39;&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        expect(component.find(&lt;span class=&quot;string&quot;&gt;&#39;button&#39;&lt;/span&gt;)).to.exist;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    describe(&lt;span class=&quot;string&quot;&gt;&#39;entering some text&#39;&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        beforeEach(() =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            component.find(&lt;span class=&quot;string&quot;&gt;&#39;textarea&#39;&lt;/span&gt;).simulate(&lt;span class=&quot;string&quot;&gt;&#39;change&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;new comment&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        it(&lt;span class=&quot;string&quot;&gt;&#39;shows text that is entered&#39;&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            expect(component.find(&lt;span class=&quot;string&quot;&gt;&#39;textarea&#39;&lt;/span&gt;)).to.have.value(&lt;span class=&quot;string&quot;&gt;&#39;new comment&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        it(&lt;span class=&quot;string&quot;&gt;&#39;when submitted, clears the input&#39;&lt;/span&gt;, () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            component.simulate(&lt;span class=&quot;string&quot;&gt;&#39;submit&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            expect(component.find(&lt;span class=&quot;string&quot;&gt;&#39;textarea&#39;&lt;/span&gt;)).to.have.value(&lt;span class=&quot;string&quot;&gt;&#39;&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;如何跑测试&quot;&gt;&lt;a href=&quot;#如何跑测试&quot; class=&quot;headerlink&quot; title=&quot;如何跑测试&quot;&gt;&lt;/a&gt;如何跑测试&lt;/h2&gt;&lt;p&gt;在package.json的script中添加测试命令&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;test&amp;quot;: &amp;quot;mocha --compilers js:babel-core/register --require ./test/test_helper.js --recursive ./test&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;test:watch&amp;quot;: &amp;quot;npm run test -- --watch&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;需要测试的时候&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;npm run test:watch&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;就可以了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;当面对现在流行的React+Redux创建的Web应用时，该如何用Mocha+Chai进行测试？&lt;/p&gt;
&lt;h2 id=&quot;搭建测试基础框架&quot;&gt;&lt;a href=&quot;#搭建测试基础框架&quot; class=&quot;headerlink&quot; title=&quot;搭建测试基础框架&quot;&gt;&lt;/a&gt;搭建测试基础框架&lt;/h2&gt;&lt;p&gt;为了搭建搭建框架，我们需要做以下几个事：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设置一个类浏览器的命令行测试环境&lt;/li&gt;
&lt;li&gt;创建一个‘renderComponent’函数来render react class&lt;/li&gt;
&lt;li&gt;模拟事件simulating events&lt;/li&gt;
&lt;li&gt;设置chai-jquery&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;下面详细解释这几个事情&lt;/p&gt;
    
    </summary>
    
      <category term="React" scheme="http://chengpeng.me/categories/React/"/>
    
    
      <category term="React" scheme="http://chengpeng.me/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>新一代视频播放器：MPV</title>
    <link href="http://chengpeng.me/2016/03/08/mpv/"/>
    <id>http://chengpeng.me/2016/03/08/mpv/</id>
    <published>2016-03-08T08:55:04.000Z</published>
    <updated>2016-06-02T08:47:49.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;为什么要用MPV&quot;&gt;&lt;a href=&quot;#为什么要用MPV&quot; class=&quot;headerlink&quot; title=&quot;为什么要用MPV&quot;&gt;&lt;/a&gt;为什么要用MPV&lt;/h2&gt;&lt;p&gt;视频播放器一向是各个平台上比较重要的一个工具软件。特别对于中国，在这个&lt;strong&gt;下载&lt;/strong&gt;比较&lt;strong&gt;自由&lt;/strong&gt;的国家，我们对于播放器的要求一向比较高，既要支持古老的RMVB格式，又要解的了H.265，还要能友好处理UTF-8，GBK，GB2312编码的字幕，着实比较麻烦。&lt;/p&gt;
&lt;h3 id=&quot;Windows&quot;&gt;&lt;a href=&quot;#Windows&quot; class=&quot;headerlink&quot; title=&quot;Windows&quot;&gt;&lt;/a&gt;Windows&lt;/h3&gt;&lt;p&gt;从&lt;a href=&quot;http://www.kmplayer.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;KMPlayer&lt;/a&gt;，到&lt;a href=&quot;https://potplayer.daum.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;PotPlayer&lt;/a&gt;。分离渲染自带，也方便添加修改，算是Windows下比较好的解决方式，现在发展到什么样子我也不太清楚了。&lt;/p&gt;
&lt;h3 id=&quot;Mac&quot;&gt;&lt;a href=&quot;#Mac&quot; class=&quot;headerlink&quot; title=&quot;Mac&quot;&gt;&lt;/a&gt;Mac&lt;/h3&gt;&lt;p&gt;Mac下的播放器选择不多但也不乏精品，可多少有些缺陷。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;早期安装&lt;a href=&quot;https://www.perian.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Perian&lt;/a&gt;解码包让QuickTime支持更多格式，但是字幕支持太差。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.videolan.org/vlc/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;VLC&lt;/a&gt;算是比较全面的一个了，解码快，支持几乎大部分编码和格式，但是对ASS的中文字幕支持太差，各种方格子简直就是让你边看电影边玩猜猜看游戏。。srt的字幕倒是没问题，但有时候就偏偏只有ASS,或者就想用ASS的时候，就没法用了。而且软件也是越来越臃肿，打开文件的速度也是越来越慢。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mplayerx.org/#sthash.WjPE9j4C.dpbs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MplayerX&lt;/a&gt;是一款国人出品，以Mplayer为基础开发的一款轻量级播放器，因为长久不更新，渲染器老旧，播放265的时候，各种雪花甚是崩溃，但是必须说的是，它对中文字幕的支持，以及CPU占用，文件打开速度之快，还是很占优势的。是我之前使用频率最高的播放器。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虽说各有缺点，但是VLC和MplayerX也能覆盖各种场景了。然而某天，这两个都搞不定了。&lt;br&gt;&lt;strong&gt;一个声音为6/7 channel的DTS，封装为MKV的文件，用HDMI输出到电视&lt;/strong&gt;，MplayerX无法将声音从HDMI输出到电视上，搜索了半天，貌似MplayerX在处理5.1(7.1)声道时，无法正确解析并通过HDMI传送。&lt;br&gt;VLC是没问题，但是有ASS的方框问题啊。&lt;br&gt;废话不多说，还是用MPV吧。&lt;/p&gt;
&lt;img src=&quot;/2016/03/08/mpv/mpv.png&quot; alt=&quot;MPV&quot; title=&quot;MPV&quot;&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;MPV&quot;&gt;&lt;a href=&quot;#MPV&quot; class=&quot;headerlink&quot; title=&quot;MPV&quot;&gt;&lt;/a&gt;MPV&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://mpv.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MPV&lt;/a&gt;是一款目前社区最活跃的，Mplayer分支的播放器了&lt;/p&gt;
&lt;p&gt;安装：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew install mpv --with-bundle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;brew linkapps mpv&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;为什么要用MPV&quot;&gt;&lt;a href=&quot;#为什么要用MPV&quot; class=&quot;headerlink&quot; title=&quot;为什么要用MPV&quot;&gt;&lt;/a&gt;为什么要用MPV&lt;/h2&gt;&lt;p&gt;视频播放器一向是各个平台上比较重要的一个工具软件。特别对于中国，在这个&lt;strong&gt;下载&lt;/strong&gt;比较&lt;strong&gt;自由&lt;/strong&gt;的国家，我们对于播放器的要求一向比较高，既要支持古老的RMVB格式，又要解的了H.265，还要能友好处理UTF-8，GBK，GB2312编码的字幕，着实比较麻烦。&lt;/p&gt;
&lt;h3 id=&quot;Windows&quot;&gt;&lt;a href=&quot;#Windows&quot; class=&quot;headerlink&quot; title=&quot;Windows&quot;&gt;&lt;/a&gt;Windows&lt;/h3&gt;&lt;p&gt;从&lt;a href=&quot;http://www.kmplayer.com/&quot;&gt;KMPlayer&lt;/a&gt;，到&lt;a href=&quot;https://potplayer.daum.net/&quot;&gt;PotPlayer&lt;/a&gt;。分离渲染自带，也方便添加修改，算是Windows下比较好的解决方式，现在发展到什么样子我也不太清楚了。&lt;/p&gt;
&lt;h3 id=&quot;Mac&quot;&gt;&lt;a href=&quot;#Mac&quot; class=&quot;headerlink&quot; title=&quot;Mac&quot;&gt;&lt;/a&gt;Mac&lt;/h3&gt;&lt;p&gt;Mac下的播放器选择不多但也不乏精品，可多少有些缺陷。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;早期安装&lt;a href=&quot;https://www.perian.org/&quot;&gt;Perian&lt;/a&gt;解码包让QuickTime支持更多格式，但是字幕支持太差。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.videolan.org/vlc/&quot;&gt;VLC&lt;/a&gt;算是比较全面的一个了，解码快，支持几乎大部分编码和格式，但是对ASS的中文字幕支持太差，各种方格子简直就是让你边看电影边玩猜猜看游戏。。srt的字幕倒是没问题，但有时候就偏偏只有ASS,或者就想用ASS的时候，就没法用了。而且软件也是越来越臃肿，打开文件的速度也是越来越慢。&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://mplayerx.org/#sthash.WjPE9j4C.dpbs&quot;&gt;MplayerX&lt;/a&gt;是一款国人出品，以Mplayer为基础开发的一款轻量级播放器，因为长久不更新，渲染器老旧，播放265的时候，各种雪花甚是崩溃，但是必须说的是，它对中文字幕的支持，以及CPU占用，文件打开速度之快，还是很占优势的。是我之前使用频率最高的播放器。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;虽说各有缺点，但是VLC和MplayerX也能覆盖各种场景了。然而某天，这两个都搞不定了。&lt;br&gt;&lt;strong&gt;一个声音为6/7 channel的DTS，封装为MKV的文件，用HDMI输出到电视&lt;/strong&gt;，MplayerX无法将声音从HDMI输出到电视上，搜索了半天，貌似MplayerX在处理5.1(7.1)声道时，无法正确解析并通过HDMI传送。&lt;br&gt;VLC是没问题，但是有ASS的方框问题啊。&lt;br&gt;废话不多说，还是用MPV吧。&lt;/p&gt;
&lt;img src=&quot;/2016/03/08/mpv/mpv.png&quot; alt=&quot;MPV&quot; title=&quot;MPV&quot;&gt;
    
    </summary>
    
    
      <category term="MPV" scheme="http://chengpeng.me/tags/MPV/"/>
    
  </entry>
  
  <entry>
    <title>谁在ApplePay中捞了一笔了</title>
    <link href="http://chengpeng.me/2016/02/23/applepay/"/>
    <id>http://chengpeng.me/2016/02/23/applepay/</id>
    <published>2016-02-23T04:28:14.000Z</published>
    <updated>2016-02-23T11:13:24.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;ApplePay启动&quot;&gt;&lt;a href=&quot;#ApplePay启动&quot; class=&quot;headerlink&quot; title=&quot;ApplePay启动&quot;&gt;&lt;/a&gt;ApplePay启动&lt;/h2&gt;&lt;p&gt;2016年2月18日，ApplePay正式在中国市场启动。&lt;br&gt;&lt;img src=&quot;/2016/02/23/applepay/applepay.jpg&quot; alt=&quot;ApplePay&quot; title=&quot;ApplePay&quot;&gt;&lt;/p&gt;
&lt;p&gt;关于ApplePay的消息文章，从18日开始蜂拥而至，手握iPhone的群众纷纷骚动起来，迫(pǎi)不及待的要参与到新一波的装B热潮。。。&lt;br&gt;结果遭遇的是一大波的无法绑卡问题 [&lt;a href=&quot;http://finance.sina.com.cn/money/lczx/2016-02-19/details-ifxprupc9431806.shtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Apple Pay绑卡长达4小时遭吐槽 水土不服陷尴尬&lt;/a&gt;]&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;NFC非接支付&quot;&gt;&lt;a href=&quot;#NFC非接支付&quot; class=&quot;headerlink&quot; title=&quot;NFC非接支付&quot;&gt;&lt;/a&gt;NFC非接支付&lt;/h2&gt;&lt;p&gt;其实ApplePay这东西还真不算是新玩意儿，NFC非接支付银联之前就搞过，只不过因为安全性问题，需要将钱先划进电子钱包才能进行闪付，程序上过于繁琐。但是技术上和ApplePay是差不多的，一个拿着手机啪啪啪，一个拿着卡啪啪啪。只不过在iPhone的光环下，一下子让这种支付方式变得更加有型有趣有逼格。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;用户角度的ApplePay文章太多就不说了，我们聊聊银行角度的ApplePay&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;为什么绑不了卡？&quot;&gt;&lt;a href=&quot;#为什么绑不了卡？&quot; class=&quot;headerlink&quot; title=&quot;为什么绑不了卡？&quot;&gt;&lt;/a&gt;为什么绑不了卡？&lt;/h2&gt;&lt;p&gt;作为一个曾经的短暂银行业从业人员，深知银行项目的排期是比较严格的，往往半年前甚至更久前就开始排期，除非遇到一些&lt;strong&gt;行长级别的&lt;/strong&gt;需求，有可能可以插个队。所以不清楚ApplePay的支持项目在各个银行间是多久前开始进行的，工程师加了多少班。在开发的过程中少不了测试，必然包括绑卡测试，这个时候就需要苹果，以及银联方的支持了。第三方支持这东西，人品几率很大，以前跟万事达做项目时候，第一个项目的对接姑娘不错，工作时间内邮件一般都能及时回复，配合测试也很专业，极大提高了效率。但是第二个项目的支持工程师就不行了，邮件不及时回，连测试内容都能搞错，整个项目的周期也是因此拖后了几周才得以完成。&lt;/p&gt;
&lt;p&gt;所以在Apple同时与这么多家银行合作开发ApplePay时，待遇可谓看脸看心情。所以在上线之后，碰到这么多的绑卡问题，再次为银行工程师默哀。&lt;/p&gt;
&lt;h2 id=&quot;谁赚到钱了？&quot;&gt;&lt;a href=&quot;#谁赚到钱了？&quot; class=&quot;headerlink&quot; title=&quot;谁赚到钱了？&quot;&gt;&lt;/a&gt;谁赚到钱了？&lt;/h2&gt;&lt;p&gt;银联之所以愿意和苹果合作，是因为ApplePay的使用必须得经过银联。与支付宝，微信支付不同，苹果在整个交易过程中是不涉及资金持有的。这之前先普及一下从我们刷卡到支付完成的一个流程吧。&lt;br&gt;&lt;img src=&quot;/2016/02/23/applepay/transfer.jpg&quot; alt=&quot;交易流程&quot; title=&quot;交易流程&quot;&gt;&lt;/p&gt;
&lt;p&gt;假设我们持有&lt;strong&gt;A银行的一张信用卡&lt;/strong&gt;，去POS机刷卡时，我们可能遭遇3种POS机，&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A银行自己的POS机&lt;/li&gt;
&lt;li&gt;别的银行的POS机&lt;/li&gt;
&lt;li&gt;银联商务的POS机&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当我们在A银行的POS机消费时，交易报文会跳过银联，直接传到A银行的后台，处理完返回形成闭环。&lt;br&gt;而我们在B银行或者银联商务的POS机上消费时，则会先通过银联，再传至A银行后台，最后返回形成闭环。&lt;/p&gt;
&lt;p&gt;第一种情况行内称之为”本代本“，同样的场景也适用于ATM机，不与银联产生任何交集。&lt;br&gt;第二种情况称之为“他代本”，银联会分得一部分利润。&lt;/p&gt;
&lt;p&gt;在ApplePay加入的情况下，整个交易路由没有变化，只是最先的信用卡换成了iPhone，同时苹果加入分配利润。&lt;/p&gt;
&lt;p&gt;这时候在第一种情况下,即使用户使用了ApplePay，银联不知道，苹果更不知道。银行无偿完成了一次ApplePay，不用分任何利润给银联和苹果。很难说这对于银行来说是赚了还是没赚，至少是免除了一部分钱给苹果了。&lt;br&gt;这种情况在现实中会占多大比例呢？，假如我有一张工行的卡，我必须得找到工行的POS机来刷，才有可能发生。而且这些对用户来说是没有区别的。哪家银行POS机铺的点多，发行的卡多，才有可能省出点肉钱吧。&lt;/p&gt;
&lt;p&gt;这个情况是否会继续持续下去呢？套用我原老大的一句话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;国内出人意料的事太多，以后谁也说不定。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;ApplePay启动&quot;&gt;&lt;a href=&quot;#ApplePay启动&quot; class=&quot;headerlink&quot; title=&quot;ApplePay启动&quot;&gt;&lt;/a&gt;ApplePay启动&lt;/h2&gt;&lt;p&gt;2016年2月18日，ApplePay正式在中国市场启动。&lt;br&gt;&lt;img src=&quot;/2016/02/23/applepay/applepay.jpg&quot; alt=&quot;ApplePay&quot; title=&quot;ApplePay&quot;&gt;&lt;/p&gt;
&lt;p&gt;关于ApplePay的消息文章，从18日开始蜂拥而至，手握iPhone的群众纷纷骚动起来，迫(pǎi)不及待的要参与到新一波的装B热潮。。。&lt;br&gt;结果遭遇的是一大波的无法绑卡问题 [&lt;a href=&quot;http://finance.sina.com.cn/money/lczx/2016-02-19/details-ifxprupc9431806.shtml&quot;&gt;Apple Pay绑卡长达4小时遭吐槽 水土不服陷尴尬&lt;/a&gt;]&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>又一个”第一篇“</title>
    <link href="http://chengpeng.me/2016/02/22/first-post/"/>
    <id>http://chengpeng.me/2016/02/22/first-post/</id>
    <published>2016-02-22T11:06:28.000Z</published>
    <updated>2016-06-02T08:47:19.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Hope-it’s-the-last-first&quot;&gt;&lt;a href=&quot;#Hope-it’s-the-last-first&quot; class=&quot;headerlink&quot; title=&quot;Hope it’s the last first&quot;&gt;&lt;/a&gt;Hope it’s the last first&lt;/h2&gt;&lt;p&gt;已经记不清这是我写的第几篇“first blog”了。&lt;br&gt;从学会上网开始，就免不了想在网上留下一些自己的印记。从最初的QQ空间开始，胡乱的记录一些中二气息爆棚的生活感想。&lt;br&gt;摆脱臃肿的Qzone（中二），用上了当时彰显“高端”的MSN的个人空间（后来改名为&lt;a href=&quot;https://zh.wikipedia.org/wiki/Windows_Live_Spaces&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Live Spaces&lt;/a&gt;），简约不失大气的风格让我坚持又叨叨了几年的生活琐事，直到10年，微软宣布停止Live Spaces服务，迁移到&lt;a href=&quot;https://cn.wordpress.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;WordPress&lt;/a&gt;网站。等文章迁移完毕，图片丢的丢，排版乱的乱，坚持则写了一段时间，想想还是自己搞个服务器弄博客吧。&lt;/p&gt;
&lt;p&gt;那个时候还没什么VPS，在&lt;a href=&quot;https://www.godaddy.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Godaddy&lt;/a&gt;上买了个域名，顺道租了个服务器。一键搭建WordPress，至此开始新的篇章，好景不长，繁重的学业加上懒惰的个性，等到要续费的时候借着省钱的借口就停下了博客的脚步（正好当时兴起Twitter，Goolge Wave&amp;lt;–夭折的货），走上了微博客的道路。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Life-Tech-Hobby&quot;&gt;&lt;a href=&quot;#Life-Tech-Hobby&quot; class=&quot;headerlink&quot; title=&quot;Life Tech Hobby&quot;&gt;&lt;/a&gt;Life Tech Hobby&lt;/h2&gt;&lt;p&gt;从那以后就没有再管理长篇博客了，往往看着老照片能够想起那个时候发生的一些事情，可是文章却可以反映出那个年代的思维，但是非常可惜以前的文章已经找不到了。&lt;/p&gt;
&lt;p&gt;记录长博客也是沉淀知识的一个好方法，在以前的学习过程中已经丢失了太多东西，也希望能够在这里留下一些精华。&lt;br&gt;当然，这里不光会有技术，同样会记录下我对生活的感悟以及杂七杂八的玩意儿吧。&lt;/p&gt;
&lt;h2 id=&quot;不要成为自己反对的那种人&quot;&gt;&lt;a href=&quot;#不要成为自己反对的那种人&quot; class=&quot;headerlink&quot; title=&quot;不要成为自己反对的那种人&quot;&gt;&lt;/a&gt;不要成为自己反对的那种人&lt;/h2&gt;&lt;p&gt;Blog需要一个描述，想不到其他的，就用了这句。&lt;br&gt;一个人在成长的过程中，三观会不断的发生改变，当见识认识到一定阶段，对社会对人也有了自己的一套价值观。但是往往在环境或者某些因素下，我们会去做一些自己也认为错误的事情，可以小到横穿马路，也可以大到杀人放火，可能是形势所迫，可能是认识发生了变化。&lt;br&gt;但是，我总希望人，至少自己可以有所坚持，坚持所谓的原则，来捍卫自己还算正的三观。而不是在一次次妥协中走到自己曾经的对立面。&lt;br&gt;其实这句话可以用“勿忘初心”这个词来代替，不过总觉得这句更显坚持（死脑筋），呵呵。&lt;/p&gt;
&lt;p&gt;Hope it’s the last first。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Hope-it’s-the-last-first&quot;&gt;&lt;a href=&quot;#Hope-it’s-the-last-first&quot; class=&quot;headerlink&quot; title=&quot;Hope it’s the last first&quot;&gt;&lt;/a&gt;Hope it’s the last first&lt;/h2&gt;&lt;p&gt;已经记不清这是我写的第几篇“first blog”了。&lt;br&gt;从学会上网开始，就免不了想在网上留下一些自己的印记。从最初的QQ空间开始，胡乱的记录一些中二气息爆棚的生活感想。&lt;br&gt;摆脱臃肿的Qzone（中二），用上了当时彰显“高端”的MSN的个人空间（后来改名为&lt;a href=&quot;https://zh.wikipedia.org/wiki/Windows_Live_Spaces&quot;&gt;Live Spaces&lt;/a&gt;），简约不失大气的风格让我坚持又叨叨了几年的生活琐事，直到10年，微软宣布停止Live Spaces服务，迁移到&lt;a href=&quot;https://cn.wordpress.org/&quot;&gt;WordPress&lt;/a&gt;网站。等文章迁移完毕，图片丢的丢，排版乱的乱，坚持则写了一段时间，想想还是自己搞个服务器弄博客吧。&lt;/p&gt;
&lt;p&gt;那个时候还没什么VPS，在&lt;a href=&quot;https://www.godaddy.com/&quot;&gt;Godaddy&lt;/a&gt;上买了个域名，顺道租了个服务器。一键搭建WordPress，至此开始新的篇章，好景不长，繁重的学业加上懒惰的个性，等到要续费的时候借着省钱的借口就停下了博客的脚步（正好当时兴起Twitter，Goolge Wave&amp;lt;–夭折的货），走上了微博客的道路。&lt;/p&gt;
    
    </summary>
    
      <category term="生活" scheme="http://chengpeng.me/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
      <category term="生活" scheme="http://chengpeng.me/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
</feed>
